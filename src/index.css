@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Neumorphic Design System */
    --background: 210 25% 92%;
    --foreground: 220 15% 25%;

    --card: 210 25% 92%;
    --card-foreground: 220 15% 25%;

    --popover: 210 25% 92%;
    --popover-foreground: 220 15% 25%;

    /* Primary - Emergency/SOS Red */
    --primary: 355 85% 55%;
    --primary-foreground: 0 0% 100%;
    --primary-glow: 355 85% 65%;

    /* Secondary - Soft neutral for buttons */
    --secondary: 210 20% 88%;
    --secondary-foreground: 220 15% 30%;

    --muted: 210 20% 85%;
    --muted-foreground: 220 10% 50%;

    /* Accent - Active states */
    --accent: 200 80% 50%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 210 20% 85%;
    --input: 210 20% 88%;
    --ring: 200 80% 50%;

    --radius: 1.5rem;

    /* Neumorphic Shadows */
    --shadow-light: 210 20% 98%;
    --shadow-dark: 210 20% 78%;
    
    /* Neumorphic elevation tokens */
    --neu-shadow-sm: 
      4px 4px 8px hsl(var(--shadow-dark) / 0.3),
      -4px -4px 8px hsl(var(--shadow-light));
    
    --neu-shadow-md: 
      8px 8px 16px hsl(var(--shadow-dark) / 0.3),
      -8px -8px 16px hsl(var(--shadow-light));
    
    --neu-shadow-lg: 
      12px 12px 24px hsl(var(--shadow-dark) / 0.35),
      -12px -12px 24px hsl(var(--shadow-light));
    
    --neu-shadow-xl: 
      20px 20px 40px hsl(var(--shadow-dark) / 0.4),
      -20px -20px 40px hsl(var(--shadow-light));
    
    --neu-inset-sm: 
      inset 4px 4px 8px hsl(var(--shadow-dark) / 0.3),
      inset -4px -4px 8px hsl(var(--shadow-light));
    
    --neu-inset-md: 
      inset 8px 8px 16px hsl(var(--shadow-dark) / 0.35),
      inset -8px -8px 16px hsl(var(--shadow-light));

    /* SOS Button special shadow */
    --sos-shadow:
      0 0 30px hsl(var(--primary) / 0.4),
      0 0 60px hsl(var(--primary) / 0.2),
      12px 12px 24px hsl(var(--shadow-dark) / 0.35),
      -12px -12px 24px hsl(var(--shadow-light));

    /* Gradients */
    --gradient-neu: linear-gradient(145deg, hsl(var(--background)) 0%, hsl(210 25% 88%) 100%);
    --gradient-button: linear-gradient(145deg, hsl(210 25% 94%), hsl(210 25% 86%));

    /* Transitions */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  }
}

@layer utilities {
  /* Neumorphic utility classes */
  .neu-flat {
    background: hsl(var(--background));
    box-shadow: var(--neu-shadow-md);
  }

  .neu-flat-sm {
    background: hsl(var(--background));
    box-shadow: var(--neu-shadow-sm);
  }

  .neu-flat-lg {
    background: hsl(var(--background));
    box-shadow: var(--neu-shadow-lg);
  }

  .neu-flat-xl {
    background: hsl(var(--background));
    box-shadow: var(--neu-shadow-xl);
  }

  .neu-pressed {
    background: hsl(var(--background));
    box-shadow: var(--neu-inset-md);
  }

  .neu-pressed-sm {
    background: hsl(var(--background));
    box-shadow: var(--neu-inset-sm);
  }

  .transition-neu {
    transition: var(--transition-smooth);
  }

  .sos-glow {
    box-shadow: var(--sos-shadow);
  }

  /* Active state for neumorphic buttons */
  .neu-active:active {
    box-shadow: var(--neu-inset-md);
    transform: scale(0.98);
  }
}
